{"ast":null,"code":"'use strict';\n\nvar defaults = require('./defaults');\n\nvar utils = require('./utils');\n\nvar dispatchRequest = require('./core/dispatchRequest');\n\nvar InterceptorManager = require('./core/InterceptorManager');\n\nvar axios = module.exports = function (config) {\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge({\n    method: 'get',\n    headers: {},\n    timeout: defaults.timeout,\n    transformRequest: defaults.transformRequest,\n    transformResponse: defaults.transformResponse\n  }, config); // Don't allow overriding defaults.withCredentials\n\n  config.withCredentials = config.withCredentials || defaults.withCredentials; // Hook up interceptors middleware\n\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n  axios.interceptors.request.forEach(function (interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n  axios.interceptors.response.forEach(function (interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n}; // Expose defaults\n\n\naxios.defaults = defaults; // Expose all/spread\n\naxios.all = function (promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = require('./helpers/spread'); // Expose interceptors\n\naxios.interceptors = {\n  request: new InterceptorManager(),\n  response: new InterceptorManager()\n}; // Provide aliases for supported request methods\n\n(function () {\n  function createShortMethods() {\n    utils.forEach(arguments, function (method) {\n      axios[method] = function (url, config) {\n        return axios(utils.merge(config || {}, {\n          method: method,\n          url: url\n        }));\n      };\n    });\n  }\n\n  function createShortMethodsWithData() {\n    utils.forEach(arguments, function (method) {\n      axios[method] = function (url, data, config) {\n        return axios(utils.merge(config || {}, {\n          method: method,\n          url: url,\n          data: data\n        }));\n      };\n    });\n  }\n\n  createShortMethods('delete', 'get', 'head');\n  createShortMethodsWithData('post', 'put', 'patch');\n})();","map":{"version":3,"sources":["/Users/sudhichaiungsuthornrungsi/Documents/react-smct/node_modules/axios/lib/axios.js"],"names":["defaults","require","utils","dispatchRequest","InterceptorManager","axios","module","exports","config","merge","url","arguments","method","headers","timeout","transformRequest","transformResponse","withCredentials","chain","undefined","promise","Promise","resolve","interceptors","request","forEach","interceptor","unshift","fulfilled","rejected","response","push","length","then","shift","all","promises","spread","createShortMethods","createShortMethodsWithData","data"],"mappings":"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","sourcesContent":["'use strict';\n\nvar defaults = require('./defaults');\nvar utils = require('./utils');\nvar dispatchRequest = require('./core/dispatchRequest');\nvar InterceptorManager = require('./core/InterceptorManager');\n\nvar axios = module.exports = function (config) {\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge({\n    method: 'get',\n    headers: {},\n    timeout: defaults.timeout,\n    transformRequest: defaults.transformRequest,\n    transformResponse: defaults.transformResponse\n  }, config);\n\n  // Don't allow overriding defaults.withCredentials\n  config.withCredentials = config.withCredentials || defaults.withCredentials;\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  axios.interceptors.request.forEach(function (interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  axios.interceptors.response.forEach(function (interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Expose defaults\naxios.defaults = defaults;\n\n// Expose all/spread\naxios.all = function (promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose interceptors\naxios.interceptors = {\n  request: new InterceptorManager(),\n  response: new InterceptorManager()\n};\n\n// Provide aliases for supported request methods\n(function () {\n  function createShortMethods() {\n    utils.forEach(arguments, function (method) {\n      axios[method] = function (url, config) {\n        return axios(utils.merge(config || {}, {\n          method: method,\n          url: url\n        }));\n      };\n    });\n  }\n\n  function createShortMethodsWithData() {\n    utils.forEach(arguments, function (method) {\n      axios[method] = function (url, data, config) {\n        return axios(utils.merge(config || {}, {\n          method: method,\n          url: url,\n          data: data\n        }));\n      };\n    });\n  }\n\n  createShortMethods('delete', 'get', 'head');\n  createShortMethodsWithData('post', 'put', 'patch');\n})();\n"]},"metadata":{},"sourceType":"script"}