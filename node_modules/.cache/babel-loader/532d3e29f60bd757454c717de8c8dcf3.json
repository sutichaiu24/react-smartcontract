{"ast":null,"code":"'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n}\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\n\n\nmodule.exports = function buildUrl(url, params) {\n  if (!params) {\n    return url;\n  }\n\n  var parts = [];\n  utils.forEach(params, function (val, key) {\n    if (val === null || typeof val === 'undefined') {\n      return;\n    }\n\n    if (utils.isArray(val)) {\n      key = key + '[]';\n    }\n\n    if (!utils.isArray(val)) {\n      val = [val];\n    }\n\n    utils.forEach(val, function (v) {\n      if (utils.isDate(v)) {\n        v = v.toISOString();\n      } else if (utils.isObject(v)) {\n        v = JSON.stringify(v);\n      }\n\n      parts.push(encode(key) + '=' + encode(v));\n    });\n  });\n\n  if (parts.length > 0) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + parts.join('&');\n  }\n\n  return url;\n};","map":{"version":3,"sources":["/Users/sudhichaiungsuthornrungsi/Documents/react-smct/node_modules/axios/lib/helpers/buildUrl.js"],"names":["utils","require","encode","val","encodeURIComponent","replace","module","exports","buildUrl","url","params","parts","forEach","key","isArray","v","isDate","toISOString","isObject","JSON","stringify","push","length","indexOf","join"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAAnB;;AAEA,SAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACnB,SAAOC,kBAAkB,CAACD,GAAD,CAAlB,CACLE,OADK,CACG,OADH,EACY,GADZ,EAELA,OAFK,CAEG,OAFH,EAEY,GAFZ,EAGLA,OAHK,CAGG,MAHH,EAGW,GAHX,EAILA,OAJK,CAIG,OAJH,EAIY,GAJZ,EAKLA,OALK,CAKG,MALH,EAKW,GALX,EAMLA,OANK,CAMG,OANH,EAMY,GANZ,EAOLA,OAPK,CAOG,OAPH,EAOY,GAPZ,CAAP;AAQD;AAED;;;;;;;;;AAOAC,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,MAAvB,EAA+B;AAC9C,MAAI,CAACA,MAAL,EAAa;AACX,WAAOD,GAAP;AACD;;AAED,MAAIE,KAAK,GAAG,EAAZ;AAEAX,EAAAA,KAAK,CAACY,OAAN,CAAcF,MAAd,EAAsB,UAAUP,GAAV,EAAeU,GAAf,EAAoB;AACxC,QAAIV,GAAG,KAAK,IAAR,IAAgB,OAAOA,GAAP,KAAe,WAAnC,EAAgD;AAC9C;AACD;;AAED,QAAIH,KAAK,CAACc,OAAN,CAAcX,GAAd,CAAJ,EAAwB;AACtBU,MAAAA,GAAG,GAAGA,GAAG,GAAG,IAAZ;AACD;;AAED,QAAI,CAACb,KAAK,CAACc,OAAN,CAAcX,GAAd,CAAL,EAAyB;AACvBA,MAAAA,GAAG,GAAG,CAACA,GAAD,CAAN;AACD;;AAEDH,IAAAA,KAAK,CAACY,OAAN,CAAcT,GAAd,EAAmB,UAAUY,CAAV,EAAa;AAC9B,UAAIf,KAAK,CAACgB,MAAN,CAAaD,CAAb,CAAJ,EAAqB;AACnBA,QAAAA,CAAC,GAAGA,CAAC,CAACE,WAAF,EAAJ;AACD,OAFD,MAGK,IAAIjB,KAAK,CAACkB,QAAN,CAAeH,CAAf,CAAJ,EAAuB;AAC1BA,QAAAA,CAAC,GAAGI,IAAI,CAACC,SAAL,CAAeL,CAAf,CAAJ;AACD;;AACDJ,MAAAA,KAAK,CAACU,IAAN,CAAWnB,MAAM,CAACW,GAAD,CAAN,GAAc,GAAd,GAAoBX,MAAM,CAACa,CAAD,CAArC;AACD,KARD;AASD,GAtBD;;AAwBA,MAAIJ,KAAK,CAACW,MAAN,GAAe,CAAnB,EAAsB;AACpBb,IAAAA,GAAG,IAAI,CAACA,GAAG,CAACc,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAAtB,GAA0B,GAA1B,GAAgC,GAAjC,IAAwCZ,KAAK,CAACa,IAAN,CAAW,GAAX,CAA/C;AACD;;AAED,SAAOf,GAAP;AACD,CApCD","sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildUrl(url, params) {\n  if (!params) {\n    return url;\n  }\n\n  var parts = [];\n\n  utils.forEach(params, function (val, key) {\n    if (val === null || typeof val === 'undefined') {\n      return;\n    }\n\n    if (utils.isArray(val)) {\n      key = key + '[]';\n    }\n\n    if (!utils.isArray(val)) {\n      val = [val];\n    }\n\n    utils.forEach(val, function (v) {\n      if (utils.isDate(v)) {\n        v = v.toISOString();\n      }\n      else if (utils.isObject(v)) {\n        v = JSON.stringify(v);\n      }\n      parts.push(encode(key) + '=' + encode(v));\n    });\n  });\n\n  if (parts.length > 0) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + parts.join('&');\n  }\n\n  return url;\n};\n"]},"metadata":{},"sourceType":"script"}